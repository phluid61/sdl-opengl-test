# Generates text.c, turning ASCII "art" into arrays of floats.

$width = 8
$height = 8
$format = 'RGBA'

map = Hash.new {|h, k| '0.0f,0.0f,0.0f,0.0f,' }
map['+'] = '1.0f,1.0f,1.0f,1.0f,'

# each entry: char, C name, ASCII-art
glyphs = [
  [?!, 'bang', [
    '...++...',
    '...++...',
    '...++...',
    '...+....',
    '........',
    '...++...',
    '...++...',
    '........',
  ]],

  [?", 'quot', [
    '..+..+..',
    '..+..+..',
    '..+..+..',
    '........',
    '........',
    '........',
    '........',
    '........',
  ]],

  [?#, 'hash', [
    '...+..+.',
    '...+..+.',
    '.+++++++',
    '..+..+..',
    '+++++++.',
    '.+..+...',
    '.+..+...',
    '........',
  ]],

  [?$, 'dollars', [
    '...+....',
    '.+++++..',
    '+..+....',
    '.+++++..',
    '...+..+.',
    '.+++++..',
    '...+....',
    '........',
  ]],

  [?%, 'percent', [
    '+....+..',
    '.+..+.+.',
    '..+..+..',
    '...+....',
    '.+..+...',
    '+.+..+..',
    '.+....+.',
    '........',
  ]],

  [?&, 'amp', [
    '........',
    '...++...',
    '..+..+..',
    '...+....',
    '..+.+.+.',
    '.+...+..',
    '..+++.+.',
    '........',
  ]],

  ["\\'", 'apos', [
    '....+...',
    '...+....',
    '..+.....',
    '........',
    '........',
    '........',
    '........',
    '........',
  ]],

  [?(, 'left_paren', [
    '...+++..',
    '..+.....',
    '.+......',
    '.+......',
    '.+......',
    '..+.....',
    '...+++..',
    '........',
  ]],

  [?), 'right_paren', [
    '.+++....',
    '....+...',
    '.....+..',
    '.....+..',
    '.....+..',
    '....+...',
    '.+++....',
    '........',
  ]],

  [?*, 'star', [
    '........',
    '+..+..+.',
    '.+.+.+..',
    '..+++...',
    '.+.+.+..',
    '+..+..+.',
    '........',
    '........',
  ]],

  [?+, 'plus', [
    '........',
    '........',
    '...+....',
    '...+....',
    '.+++++..',
    '...+....',
    '...+....',
    '........',
  ]],

  [?,, 'comma', [
    '........',
    '........',
    '........',
    '........',
    '........',
    '...++...',
    '....+...',
    '...+....',
  ]],

  [?-, 'hyphen', [
    '........',
    '........',
    '........',
    '........',
    '.+++++..',
    '........',
    '........',
    '........',
  ]],

  [?., 'dot', [
    '........',
    '........',
    '........',
    '........',
    '........',
    '...++...',
    '...++...',
    '........',
  ]],

  [?/, 'slash', [
    '......+.',
    '.....+..',
    '....+...',
    '...+....',
    '..+.....',
    '.+......',
    '+.......',
    '........',
  ]],

  [?0, ?0, [
    '.+++++..',
    '+.....+.',
    '+.....+.',
    '+.+++.+.',
    '+.....+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?1, ?1, [
    '...+....',
    '..++....',
    '.+.+....',
    '...+....',
    '...+....',
    '...+....',
    '.+++++..',
    '........',
  ]],

  [?2, ?2, [
    '.+++++..',
    '+.....+.',
    '+.....+.',
    '....++..',
    '..++....',
    '.+......',
    '+++++++.',
    '........',
  ]],

  [?3, ?3, [
    '.+++++..',
    '+.....+.',
    '......+.',
    '...+++..',
    '......+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?4, ?4, [
    '...++...',
    '..+.+...',
    '.+..+...',
    '+...+...',
    '+++++++.',
    '....+...',
    '....+...',
    '........',
  ]],

  [?5, ?5, [
    '+++++++.',
    '+.......',
    '++++++..',
    '......+.',
    '......+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?6, ?6, [
    '.+++++..',
    '+.....+.',
    '+.......',
    '++++++..',
    '+.....+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?7, ?7, [
    '+++++++.',
    '......+.',
    '.....+..',
    '..+++++.',
    '...+....',
    '..+.....',
    '.+......',
    '........',
  ]],

  [?8, ?8, [
    '.+++++..',
    '+.....+.',
    '+.....+.',
    '.+++++..',
    '+.....+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?9, ?9, [
    '.+++++..',
    '+.....+.',
    '+.....+.',
    '.+++++..',
    '.....+..',
    '....+...',
    '.+++....',
    '........',
  ]],

  [?:, 'colon', [
    '........',
    '...++...',
    '...++...',
    '........',
    '...++...',
    '...++...',
    '........',
    '........',
  ]],

  [?;, 'semicolon', [
    '........',
    '...++...',
    '...++...',
    '........',
    '...++...',
    '....+...',
    '....+...',
    '........',
  ]],

  [?<, 'LT', [
    '.....+..',
    '....+...',
    '...+....',
    '..+.....',
    '...+....',
    '....+...',
    '.....+..',
    '........',
  ]],

  [?=, 'EQ', [
    '........',
    '........',
    '.+++++..',
    '........',
    '........',
    '.+++++..',
    '........',
    '........',
  ]],

  [?>, 'GT', [
    '..+.....',
    '...+....',
    '....+...',
    '.....+..',
    '....+...',
    '...+....',
    '..+.....',
    '........',
  ]],

  [??, 'question', [
    '.+++++..',
    '+.....+.',
    '+.....+.',
    '....++..',
    '...+....',
    '........',
    '...+....',
    '........',
  ]],

  [?@, 'at', [
    '.+++++..',
    '+.....+.',
    '+..++++.',
    '+.+...+.',
    '+..+++..',
    '+.......',
    '.+++++..',
    '........',
  ]],

  [?A, ?A, [
    '...+....',
    '..+.+...',
    '.+...+..',
    '+.....+.',
    '+++++++.',
    '+.....+.',
    '+.....+.',
    '........',
  ]],

  [?B, ?B, [
    '++++++..',
    '+.....+.',
    '+.....+.',
    '++++++..',
    '+.....+.',
    '+.....+.',
    '++++++..',
    '........',
  ]],

  [?C, ?C, [
    '.+++++..',
    '+.....+.',
    '+.......',
    '+.......',
    '+.......',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?D, ?D, [
    '++++++..',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '++++++..',
    '........',
  ]],

  [?E, ?E, [
    '+++++++.',
    '+.......',
    '+.......',
    '++++....',
    '+.......',
    '+.......',
    '+++++++.',
    '........',
  ]],

  [?F, ?F, [
    '+++++++.',
    '+.......',
    '+.......',
    '++++....',
    '+.......',
    '+.......',
    '+.......',
    '........',
  ]],

  [?G, ?G, [
    '.+++++..',
    '+.....+.',
    '+.......',
    '+...+++.',
    '+.....+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?H, ?H, [
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+++++++.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '........',
  ]],

  [?I, ?I, [
    '.+++++..',
    '...+....',
    '...+....',
    '...+....',
    '...+....',
    '...+....',
    '.+++++..',
    '........',
  ]],

  [?J, ?J, [
    '.+++++..',
    '...+....',
    '...+....',
    '...+....',
    '...+....',
    '+..+....',
    '.++.....',
    '........',
  ]],

  [?K, ?K, [
    '+....+..',
    '+...+...',
    '+..+....',
    '+++.....',
    '+..+....',
    '+...+...',
    '+....+..',
    '........',
  ]],

  [?L, ?L, [
    '+.......',
    '+.......',
    '+.......',
    '+.......',
    '+.......',
    '+.......',
    '++++++..',
    '........',
  ]],

  [?M, ?M, [
    '+.....+.',
    '++...++.',
    '+.+.+.+.',
    '+..+..+.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '........',
  ]],

  [?N, ?N, [
    '+.....+.',
    '++....+.',
    '+.+...+.',
    '+..+..+.',
    '+...+.+.',
    '+....++.',
    '+.....+.',
    '........',
  ]],

  [?O, ?O, [
    '.+++++..',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?P, ?P, [
    '++++++..',
    '+.....+.',
    '+.....+.',
    '++++++..',
    '+.......',
    '+.......',
    '+.......',
    '........',
  ]],

  [?Q, ?Q, [
    '.+++++..',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+..++.+.',
    '+....++.',
    '.+++++++',
    '........',
  ]],

  [?R, ?R, [
    '++++++..',
    '+.....+.',
    '+.....+.',
    '++++++..',
    '+...+...',
    '+....+..',
    '+.....+.',
    '........',
  ]],

  [?S, ?S, [
    '.+++++..',
    '+.....+.',
    '+.......',
    '.+++++..',
    '......+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?T, ?T, [
    '+++++++.',
    '...+....',
    '...+....',
    '...+....',
    '...+....',
    '...+....',
    '...+....',
    '........',
  ]],

  [?U, ?U, [
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '.+++++..',
    '........',
  ]],

  [?V, ?V, [
    '+.....+.',
    '+.....+.',
    '.+...+..',
    '.+...+..',
    '..+.+...',
    '..+.+...',
    '...+....',
    '........',
  ]],

  [?W, ?W, [
    '+.....+.',
    '+.....+.',
    '+.....+.',
    '+..+..+.',
    '+..+..+.',
    '+.+.+.+.',
    '.+...+..',
    '........',
  ]],

  [?X, ?X, [
    '+.....+.',
    '.+...+..',
    '..+.+...',
    '...+....',
    '..+.+...',
    '.+...+..',
    '+.....+.',
    '........',
  ]],

  [?Y, ?Y, [
    '+.....+.',
    '+.....+.',
    '.+...+..',
    '..+.+...',
    '...+....',
    '...+....',
    '...+....',
    '........',
  ]],

  [?Z, ?Z, [
    '+++++++.',
    '.....+..',
    '....+...',
    '..+++...',
    '..+.....',
    '.+......',
    '+++++++.',
    '........',
  ]],

  [?[, 'left_bracket', [
    '..+++...',
    '..+.....',
    '..+.....',
    '..+.....',
    '..+.....',
    '..+.....',
    '..+++...',
    '........',
  ]],

  ['\\\\', 'backslash', [
    '+.......',
    '.+......',
    '..+.....',
    '...+....',
    '....+...',
    '.....+..',
    '......+.',
    '........',
  ]],

  [?], 'right_bracket', [
    '..+++...',
    '....+...',
    '....+...',
    '....+...',
    '....+...',
    '....+...',
    '..+++...',
    '........',
  ]],

  [?^, 'carat', [
    '...+....',
    '..+.+...',
    '.+...+..',
    '........',
    '........',
    '........',
    '........',
    '........',
  ]],

  [?_, 'underscore', [
    '........',
    '........',
    '........',
    '........',
    '........',
    '........',
    '........',
    '+++++++.',
  ]],

  [?`, 'backtick', [
    '..+.....',
    '...+....',
    '....+...',
    '........',
    '........',
    '........',
    '........',
    '........',
  ]],

  # TODO: lowercase?

  [?{, 'left_brace', [
    '...+++..',
    '..+.....',
    '..+.....',
    '.+......',
    '..+.....',
    '..+.....',
    '...+++..',
    '........',
  ]],

  [?|, 'bar', [
    '...+....',
    '...+....',
    '...+....',
    '........',
    '...+....',
    '...+....',
    '...+....',
    '........',
  ]],

  [?}, 'right_brace', [
    '.+++....',
    '....+...',
    '....+...',
    '.....+..',
    '....+...',
    '....+...',
    '.+++....',
    '........',
  ]],

  [?~, 'tilde', [
    '........',
    '........',
    '.++.....',
    '+..+..+.',
    '....++..',
    '........',
    '........',
    '........',
  ]],


]

texture_ids_code = []
global_code = []
generate_code = []
use_code = []

glyphs.each_with_index do |data, num|
  char, cname, lines = data

  texture_ids_code << '0'

  comment = lines.map {|line| " * #{line}" }
  comment[0][0] = '/'
  global_code += [*comment, ' */']

  generate_code << <<C

	glBindTexture(GL_TEXTURE_2D, textures[#{num}]);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_BORDER);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_BORDER);
	glTexParameterfv(GL_TEXTURE_2D, GL_TEXTURE_BORDER_COLOR, border);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
	glTexImage2D(GL_TEXTURE_2D, 0, GL_#{$format}, #{$width}, #{$height}, 0, GL_#{$format}, GL_FLOAT, TEXT_#{cname});
C

  global_code << "static const GLfloat TEXT_#{cname}[] = {"
  lines.each do |line|
    global_code << ("\t" + line.gsub(/./) {|c| map[c] })
  end
  global_code += ['};', '']

  use_code << "\tcase '#{char}':"
  use_code << "\t\tuse_texture(textures[#{num}]);"
  use_code << "\t\treturn 0;"
end

puts <<C

/* THIS FILE IS AUTOMATICALLY GENERATED */

#include "text.h"

#include <stdint.h>
#include <GL/gl.h>
#include <GL/glu.h>

const uint64_t Text__font_width = UINT64_C(#{$width});
const uint64_t Text__font_height = UINT64_C(#{$height});

static GLuint textures[] = {#{texture_ids_code.join ','}};

#{global_code.join "\n"}

static GLfloat border[] = {0.0f, 0.0f, 0.0f, 0.0f};

void Text__generate_textures() {
	glActiveTexture(GL_TEXTURE0);
	glGenTextures(#{glyphs.count}, textures);

#{generate_code.join}
}

static inline void use_texture(GLuint texid) {
	glActiveTexture(GL_TEXTURE0);
	glBindTexture(GL_TEXTURE_2D, texid);
}

int Text__use_texture(char c) {
	switch (c) {
#{use_code.join "\n"}
	}
	return -1;
}

C

# vim: set ts=2 sts=2 sw=2 expandtab
